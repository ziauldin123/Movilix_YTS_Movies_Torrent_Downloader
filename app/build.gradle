apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    ndkVersion '23.0.7421159'

    defaultConfig {
        applicationId "com.movilix"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 19
        versionName "2.9"

        /*
        * Convection:
        *  major.minor.[revision][-some_info]
        */
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    /* Enable or disable logging in build types */
    def SESSION_LOGGING = "SESSION_LOGGING"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField("boolean", SESSION_LOGGING, "false")
        }

        debug {
//            applicationIdSuffix ".debug"
//            versionNameSuffix "-DEBUG"
            testCoverageEnabled true
            debuggable true

            buildConfigField("boolean", SESSION_LOGGING, "true")
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            universalApk true
        }
    }
    project.ext.versionCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
//            outputFileName = "${variant.applicationId}_V${variant.versionCode}_VN-${variant.versionName}_" + new Date().format('yyyy-MM-dd') + ".apk"
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + android.defaultConfig.versionCode
        }
    }

    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
    }

    testOptions.unitTests.includeAndroidResources = true

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}
def LIBTORRENT4J_VERSION= '2.0.4-20'
def ROOM_VERSION = '2.3.0'
def ACRA_VERSION = "5.8.3"
def DAGGER_VERSION = "2.27"
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-config:21.1.0'
    implementation 'com.google.firebase:firebase-analytics:21.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.2.10'
    implementation 'com.google.firebase:firebase-perf:20.0.6'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "androidx.room:room-testing:$ROOM_VERSION"
    testAnnotationProcessor 'com.google.auto.service:auto-service:1.0-rc7'


    implementation 'com.android.volley:volley:1.2.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    /* AndroidX libraries */
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0-beta02'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.2.0-alpha01'
    implementation 'com.google.android.material:material:1.4.0-beta01'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.room:room-runtime:$ROOM_VERSION"
    implementation "androidx.room:room-rxjava2:$ROOM_VERSION"
    annotationProcessor "androidx.room:room-compiler:$ROOM_VERSION" /* For schemas import */
    implementation 'androidx.work:work-runtime:2.5.0'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'androidx.paging:paging-runtime:3.0.0'

    /* ReactiveX */
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"



    /* libtorrent wrapper */
    implementation "org.libtorrent4j:libtorrent4j:$LIBTORRENT4J_VERSION"
    implementation "org.libtorrent4j:libtorrent4j-android-arm:$LIBTORRENT4J_VERSION"
    implementation "org.libtorrent4j:libtorrent4j-android-arm64:$LIBTORRENT4J_VERSION"
    implementation "org.libtorrent4j:libtorrent4j-android-x86:$LIBTORRENT4J_VERSION"
    implementation "org.libtorrent4j:libtorrent4j-android-x86_64:$LIBTORRENT4J_VERSION"

    /* Other */
    implementation "net.cachapa.expandablelayout:expandablelayout:2.9.2"
    implementation "com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:1.0.0"
    implementation "com.github.anthonynsimon:jurl:v0.4.2"
    implementation "com.jaredrummler:colorpicker:1.1.0"
    /* Don't use Commons IO >= 2.6, because they uses Java NIO, supported only from API 26 */
//    implementation 'commons-io:commons-io:2.7'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.takisoft.preferencex:preferencex:1.1.0"
    implementation "com.leinardi.android:speed-dial:3.1.1"
    implementation 'net.java.dev.jna:jna:5.6.0@aar'

    implementation files('libs/YouTubeAndroidPlayerApi.jar')
//    implementation 'com.github.moondroid.coverflow:library:1.0'
    implementation 'com.yarolegovich:discrete-scrollview:1.5.1'

    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'com.facebook.android:audience-network-sdk:6.5.0'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'

    //google admob
    implementation 'com.google.android.gms:play-services-ads:20.6.0'
    implementation  'com.google.ads.mediation:applovin:11.3.3.0'
    implementation  'com.google.ads.mediation:facebook:6.10.0.0'
    implementation 'com.google.ads.mediation:inmobi:10.0.5.0'
    implementation 'com.google.android.ads:mediation-test-suite:2.0.0'

    //lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime:2.3.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"

    implementation 'com.kingfisherphuoc:easy-recyclerview-indicator:1.3'
    implementation project(path: ':nativetemplates')

    implementation 'com.github.myinnos:Android-InApp-Update:BETA-0.2'
    implementation 'com.google.android.play:core:1.7.2' //to initiate AppUpdateManager


}